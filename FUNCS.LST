Turbo Assembler	 Version 4.1	    02/14/24 21:46:17	    Page 1
funcs.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .286
      4
      5	      =0064		     MAX_LEN = 100d
      6
      7				     org 82h
      8
      9	0082  ??		     argv db ?
     10
     11				     org 100h
     12
     13	0100  BF 017Er		     start:	 mov di, offset	Line1
     14	0103  BE 0182r				 mov si, offset	Line2
     15	0106  BA 000A				 mov dx, 10d
     16	0109  E8 005B				 call MyMovmem
     17
     18	010C  B8 4C00				 mov ax, 4c00h				     ; EXIT
     19	010F  CD 21					 int 21h
     20
     21
     22				     ;------------------------------------------------
     23				     ; Gets string length
     24				     ;
     25				     ; Entry: DI - string adress
     26				     ; Exit:  AX - string len
     27				     ; Destr:
     28				     ;------------------------------------------------
     29
     30	0111			     MyStrlen	 proc
     31	0111  57				 push di
     32	0112  51				 push cx
     33
     34	0113  B0 24				 mov al, '$'		 ; COUNT TILL MEET
     35
     36	0115  33 C9				 xor cx, cx
     37	0117  49				 dec cx			 ; CX =	FFFF
     38
     39	0118  F2> AE				 repne scasb
     40
     41	011A  F7 D1				 not cx
     42	011C  83 E9 01				 sub cx, 1d
     43
     44	011F  8B C1				 mov ax, cx		 ; AX =	CX
     45
     46	0121  59				 pop cx
     47	0122  5F				 pop di
     48	0123  C3				 ret
     49	0124					 endp
     50
     51				     ;------------------------------------------------
     52				     ; Finds the first occurrence of char in the initial count bytes
     53				     ;
     54				     ; Entry: DI - pointer to the object to be examined
     55				     ;	      SI - bytes to search for
     56				     ;	      DX - max number of bytes to examine
     57				     ; Exit:  AX - pointer to the location of the byte,	or a null pointer
Turbo Assembler	 Version 4.1	    02/14/24 21:46:17	    Page 2
funcs.asm



     58				     ;		   if no such byte is found
     59				     ; Destr: CX
     60				     ;------------------------------------------------
     61
     62	0124			     MyMemchr	     proc
     63	0124  52				     push dx
     64	0125  56				     push si
     65	0126  57				     push di
     66
     67	0127  8B CA				     mov cx, dx
     68	0129  8B C6				     mov ax, si
     69
     70	012B  F2> AE				     repne scasb	 ; WHILE (CX-- && ES:[DI++] != AL)
     71
     72	012D  B8 0000				     mov ax, 0000d
     73	0130  83 F9 00				     cmp cx, 0000d
     74	0133  74 03				     je	 MemchrExit	 ; RETURN NULL POINTER IF DID NOT FIND BYTE
     75
     76	0135  4F				     dec di
     77	0136  8B C7				     mov ax, di
     78
     79	0138  5F		     MemchrExit:     pop di
     80	0139  5E				     pop si
     81	013A  5A				     pop dx
     82	013B  C3				     ret
     83	013C					     endp
     84
     85				     ;------------------------------------------------
     86				     ; Copies the value	into each of the first [count] characters
     87				     ; of the object pointed to	by [dest]
     88				     ;
     89				     ; Entry: DI - pointer to the object to fill
     90				     ;	      SI - fill	byte
     91				     ;	      DX - number of bytes to fill
     92				     ; Exit:  AX - pointer to the filled object
     93				     ; Destr: CX
     94				     ;------------------------------------------------
     95
     96	013C			     MyMemset	 proc
     97	013C  52				 push dx
     98	013D  56				 push si
     99	013E  57				 push di
    100
    101	013F  8B CA				 mov cx, dx	 ; AMOUNT OF BYTES
    102	0141  8B C6				 mov ax, si
    103
    104	0143  F3> AB				 rep stosw
    105
    106
    107	0145  5F				 pop di		 ; EXIT
    108
    109	0146  8B C7				 mov ax, di	 ; RETURNED VALUE
    110
    111	0148  5E				 pop si
    112	0149  5A				 pop dx
    113	014A  C3				 ret
    114	014B					 endp
Turbo Assembler	 Version 4.1	    02/14/24 21:46:17	    Page 3
funcs.asm



    115
    116				     ;------------------------------------------------
    117				     ; Reinterprets the	objects	pointed	to by [lhs] and	[rhs] as arrays	of
    118				     ; unsigned	char and compares the first count bytes	of these arrays.
    119				     ;
    120				     ; Entry: DI - pointer to the memory buffers to compare [lhs]
    121				     ;	      SI - pointer to the memory buffers to compare [rhs]
    122				     ;	      DX - number of bytes to examine
    123				     ; Exit:  AL - 0â€‹	if all count bytes of lhs and rhs are equal.
    124				     ;		     Positive value if the first differing byte	in lhs is
    125				     ;		     greater than the corresponding byte in rhs.
    126				     ;		     Negative value if the first differing byte	in lhs is
    127				     ;		     less than the corresponding byte in rhs.
    128				     ; Destr: CX
    129				     ;------------------------------------------------
    130
    131	014B			     MyMemcmp	 proc
    132	014B  52				 push dx
    133	014C  56				 push si
    134	014D  57				 push di
    135
    136	014E  8B CA				 mov cx, dx	 ; AMOUNT OF BYTES
    137
    138	0150  F3> A6				 repe cmpsb
    139
    140	0152  8A 05				 mov al, [di]
    141	0154  8A 24				 mov ah, [si]
    142
    143	0156  5F				 pop di		 ; EXIT
    144	0157  5E				 pop si
    145	0158  5A				 pop dx
    146	0159  C3				 ret
    147	015A					 endp
    148
    149				     ;------------------------------------------------
    150				     ; Copies count bytes from the object pointed to by	[src] to the object pointed
    151				     ; to by [dest]. Both objects are reinterpreted as arrays of unsigned char.
    152				     ;
    153				     ; Entry: DI - pointer to the memory location to copy to [dest]
    154				     ;	      SI - pointer to the memory location to copy from [src]
    155				     ;	      DX - number of bytes to copy
    156				     ; Exit:  AX - [dest]
    157				     ; Destr: CX
    158				     ;------------------------------------------------
    159
    160	015A			     MyMemcpy	 proc
    161	015A  52				 push dx
    162	015B  56				 push si
    163	015C  57				 push di
    164
    165	015D  8B CA				 mov cx, dx	 ; AMOUNT OF BYTES
    166
    167	015F  F3> A4				 rep movsb
    168
    169	0161  5F				 pop di		 ; EXIT
    170
    171	0162  8B C7				 mov ax, di	 ; RETURNED VALUE
Turbo Assembler	 Version 4.1	    02/14/24 21:46:17	    Page 4
funcs.asm



    172
    173	0164  5E				 pop si
    174	0165  5A				 pop dx
    175	0166  C3				 ret
    176	0167					 endp
    177
    178				     ;------------------------------------------------
    179				     ; Copies count bytes from the object pointed to by	[src] to the object pointed
    180				     ; to by [dest]. Both objects are reinterpreted as arrays of unsigned char.
    181				     ;
    182				     ; Entry: DI - pointer to the memory location to copy to [dest]
    183				     ;	      SI - pointer to the memory location to copy from [src]
    184				     ;	      DX - number of bytes to copy
    185				     ; Exit:  AX - [dest]
    186				     ; Destr: CX
    187				     ;------------------------------------------------
    188
    189	0167			     MyMovmem	 proc
    190	0167  52				 push dx
    191	0168  56				 push si
    192	0169  57				 push di
    193
    194	016A  FC				 cld		 ; DF =	0
    195	016B  3B FE				 cmp di, si
    196	016D  7E 05				 jle SrcFirst
    197
    198	016F  FD				 std		 ; DF =	1
    199	0170  03 FA				 add di, dx
    200	0172  03 F2				 add si, dx
    201
    202	0174  8B CA		     SrcFirst:	 mov cx, dx	 ; AMOUNT OF BYTES
    203
    204	0176  F3> A4				 rep movsb
    205
    206	0178  5F				 pop di		 ; EXIT
    207
    208	0179  8B C7				 mov ax, di	 ; RETURNED VALUE
    209
    210	017B  5E				 pop si
    211	017C  5A				 pop dx
    212	017D  C3				 ret
    213	017E					 endp
    214
    215	017E  41 41 41 41	     Line1 db 'AAAA'
    216	0182  42 42 42 42 42 42	42+  Line2 db 'BBBBBBBBBBBBBBBBBB'
    217	      42 42 42 42 42 42	42+
    218	      42 42 42 42
    219
    220				     end start
Turbo Assembler	 Version 4.1	    02/14/24 21:46:17	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/14/24"
??FILENAME			  Text	 "funcs	  "
??TIME				  Text	 "21:46:17"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 FUNCS
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ARGV				  Byte	 DGROUP:0082
LINE1				  Byte	 DGROUP:017E
LINE2				  Byte	 DGROUP:0182
MAX_LEN				  Number 0064
MEMCHREXIT			  Near	 DGROUP:0138
MYMEMCHR			  Near	 DGROUP:0124
MYMEMCMP			  Near	 DGROUP:014B
MYMEMCPY			  Near	 DGROUP:015A
MYMEMSET			  Near	 DGROUP:013C
MYMOVMEM			  Near	 DGROUP:0167
MYSTRLEN			  Near	 DGROUP:0111
SRCFIRST			  Near	 DGROUP:0174
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0194 Word	  Public  CODE
