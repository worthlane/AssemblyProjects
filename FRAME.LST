Turbo Assembler	 Version 4.1	    02/14/24 20:21:54	    Page 1
frame.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .286
      4
      5				     org 82h
      6
      7	0082  ??		     argv    db	     ?
      8
      9				     org 100h
     10
     11	      =0050		     LINE_LEN =	80d
     12
     13	0100  BF 0082r		     start:  mov di, offset argv
     14
     15	0103  E8 000B			     call GetConsoleParams
     16
     17	0106  E8 00AA			     call CenterFrame
     18
     19	0109  E8 00C7			     call DrawFrame
     20
     21	010C  B8 4C00				     mov ax, 4c00h			     ; EXIT
     22	010F  CD 21				     int 21h
     23
     24
     25				     ;------------------------------------------------
     26				     ; Getting frame parameters	from console
     27				     ;
     28				     ; Entry: DI - command line
     29				     ; Exit:  BX - LENGTH
     30				     ;	      DX - WIDTH
     31				     ;	      AH - COLOR
     32				     ; Destr:
     33				     ;------------------------------------------------
     34
     35	0111			     GetConsoleParams	 proc
     36
     37	0111  E8 006E					 call GetDec		 ; LENGTH
     38	0114  8B D8					 mov bx, ax
     39
     40	0116  E8 008B					 call SkipSpaces
     41
     42	0119  E8 0066					 call GetDec		 ; WIDTH
     43	011C  8B D0					 mov dx, ax
     44
     45	011E  E8 0083					 call SkipSpaces
     46
     47	0121  E8 0009					 call GetHex		 ; COLOR
     48	0124  8A E0					 mov ah, al
     49
     50	0126  E8 007B					 call SkipSpaces
     51
     52	0129  E8 0035					 call GetStyle		 ; STYLE
     53
     54	012C  C3						     ret
     55	012D							     endp
     56
     57				     ;------------------------------------------------
Turbo Assembler	 Version 4.1	    02/14/24 20:21:54	    Page 2
frame.asm



     58				     ; Getting hexadecimal number (FORMAT: ...h)
     59				     ;
     60				     ; Entry: DI - command line
     61				     ; Exit:  AX - number
     62				     ; Destr:
     63				     ;------------------------------------------------
     64
     65	012D			     GetHex		 proc
     66	012D  53					 push bx		     ; SAVING BX
     67
     68	012E  33 DB					 xor bx, bx		     ; BX = 0
     69	0130  32 E4					 xor ah, ah
     70
     71	0132  8A 05					 mov al, [di]
     72
     73	0134  3D 002F		     HexDigit:		 cmp ax, '0' - 1d
     74	0137  7E 0A					 jle HexAlpha
     75	0139  3D 0039					 cmp ax, '9'
     76	013C  7F 05					 jg  HexAlpha
     77
     78	013E  2C 30					 sub al, '0'
     79
     80	0140  EB 0F 90					 jmp HexLoop
     81
     82	0143  3D 0060		     HexAlpha:		 cmp ax, 'a' - 1d
     83	0146  7E 15					 jle ExitHexLoop
     84	0148  3D 0066					 cmp ax, 'f'
     85	014B  7F 10					 jg  ExitHexLoop
     86
     87	014D  2C 61					 sub al, 'a'
     88	014F  04 0A					 add al, 10d
     89
     90	0151  6B DB 10		     HexLoop:		 imul bx, bx, 16d	     ; BX *= 16
     91
     92	0154  32 E4					 xor ah, ah		     ; AX = 00 AL
     93	0156  03 D8					 add bx, ax		     ; BX += AL
     94
     95	0158  47					 inc di			     ; DI++
     96	0159  8A 05					 mov al, [di]
     97
     98	015B  EB D7					 jmp HexDigit
     99	015D			     ExitHexLoop:
    100
    101	015D  8B C3					 mov ax, bx
    102
    103	015F  5B					 pop bx
    104	0160  C3						     ret
    105	0161							     endp
    106
    107				     ;------------------------------------------------
    108				     ; Getting style from console
    109				     ;
    110				     ; Entry: DI - command line
    111				     ; Exit:  SI - char	string
    112				     ; Destr:
    113				     ;------------------------------------------------
    114
Turbo Assembler	 Version 4.1	    02/14/24 20:21:54	    Page 3
frame.asm



    115	0161			     GetStyle	 proc
    116	0161  50				 push ax
    117
    118	0162  8A 05				 mov al, [di]
    119
    120	0164  3C 2A				 cmp al, '*'
    121	0166  75 0A				 jne DefaultStyle
    122
    123	0168  8B F7				 mov si, di
    124	016A  83 C6 01				 add si, 1d
    125
    126	016D  83 C7 0A				 add di, 10d
    127
    128	0170  58				 pop ax
    129	0171  C3				 ret
    130
    131	0172			     DefaultStyle:
    132
    133	0172  E8 000D				 call GetDec
    134
    135	0175  2D 0001				 sub ax, 1d
    136
    137	0178  6B C0 09				 imul ax, ax, 9d
    138
    139	017B  BE 0214r				 mov si, offset	Style
    140	017E  03 F0				 add si, ax
    141
    142	0180  58				 pop ax
    143	0181  C3					     ret
    144	0182						     endp
    145
    146				     ;------------------------------------------------
    147				     ; Getting decimal number from command line
    148				     ;
    149				     ; Entry: DI - command line
    150				     ; Exit:  AX - number
    151				     ; Destr:
    152				     ;------------------------------------------------
    153
    154	0182			     GetDec	     proc
    155	0182  53				     push bx			 ; SAVING BX
    156
    157	0183  33 DB				     xor bx, bx			 ; BX =	0
    158	0185  32 E4				     xor ah, ah
    159
    160	0187  EB 0B 90				     jmp DecLoopCheck
    161
    162	018A  6B DB 0A		     DecLoop:	     imul bx, bx, 10d		 ; BX *= 10
    163
    164	018D  47				     inc di			 ; DI++
    165	018E  2C 30				     sub al, '0'		 ; AL =	DIGIT
    166
    167	0190  32 E4				     xor ah, ah			 ; AX =	00 AL
    168	0192  03 D8				     add bx, ax			 ; BX += AL
    169
    170	0194  8A 05		     DecLoopCheck:   mov al, [di]
    171	0196  3D 002F				     cmp ax, '0' - 1
Turbo Assembler	 Version 4.1	    02/14/24 20:21:54	    Page 4
frame.asm



    172	0199  7E 05				     jle DecLoopExit
    173	019B  3D 0039				     cmp ax, '9'
    174	019E  7E EA				     jle DecLoop
    175	01A0			     DecLoopExit:
    176
    177	01A0  8B C3				     mov ax, bx			 ; AX =	BX
    178
    179	01A2  5B				     pop bx			 ; RETURNING BX
    180
    181	01A3  C3						 ret
    182	01A4							 endp
    183
    184				     ;------------------------------------------------
    185				     ; Skipping	spaces from command line
    186				     ;
    187				     ; Entry: DI - command line
    188				     ; Exit:
    189				     ; Destr:
    190				     ;------------------------------------------------
    191
    192	01A4			     SkipSpaces	 proc
    193
    194	01A4  50				 push ax		 ; SAVING REGISTERS
    195	01A5  51				 push cx
    196
    197	01A6  33 C9				 xor cx, cx		 ; CX =	0
    198	01A8  49				 dec cx			 ; CX =	FFFF
    199
    200	01A9  B0 20				 mov al, ' '
    201
    202	01AB  F3> AE				 repe scasb		 ; SKIP	WHILE SPACE
    203
    204	01AD  8A 05				 mov al, [di]
    205
    206	01AF  4F				 dec di			 ; FIRST SYMBOL	AFTER SPACE
    207
    208	01B0  59				 pop cx			 ; RETURNING REGISTERS
    209	01B1  58				 pop ax
    210
    211	01B2  C3					     ret
    212	01B3						     endp
    213
    214				     ;------------------------------------------------
    215				     ; Frame centering
    216				     ;
    217				     ; Entry: dx - width
    218				     ;	      bx - length
    219				     ; Exit:  di - frame's left	upper corner position
    220				     ; Destr:
    221				     ;------------------------------------------------
    222
    223	01B3			     CenterFrame proc
    224
    225	01B3  52				 push dx		     ; SAVING WIDTH
    226	01B4  53				 push bx		     ; SAVING LENGTH
    227	01B5  56				 push si
    228	01B6  50				 push ax
Turbo Assembler	 Version 4.1	    02/14/24 20:21:54	    Page 5
frame.asm



    229
    230	01B7  D1 EA				 shr dx, 1		     ; DX = WIDTH / 2
    231	01B9  D1 EB				 shr bx, 1		     ; BX = LENGTH / 2
    232
    233	01BB  BF 0028				 mov di, 40d
    234	01BE  BE 000C				 mov si, 12d
    235
    236	01C1  2B F2				 sub si, dx		     ; SI = MIDDLE LINE	- WIDTH	/ 2
    237	01C3  2B FB				 sub di, bx		     ; DI = MIDDLE COLUMN - LENGTH / 2
    238
    239	01C5  6B C6 50				 imul ax, si, LINE_LEN
    240	01C8  03 C7				 add ax, di
    241
    242	01CA  D1 E0				 shl ax, 1		     ; AX = (MIDDLE LINE - WIDTH / 2, MIDDLE COLUMN - LENGTH+
    243				     / 2)
    244
    245	01CC  8B F8				 mov di, ax
    246
    247	01CE  58				 pop ax
    248	01CF  5E				 pop si
    249	01D0  5B				 pop bx			     ; RETURNING WIDTH
    250	01D1  5A				 pop dx			     ; RETURNING LENGTH
    251
    252	01D2  C3					     ret
    253	01D3						     endp
    254
    255				     ;------------------------------------------------
    256				     ; Draw frame
    257				     ;
    258				     ; Entry: di - first byte position
    259				     ;	      si - char	string adress
    260				     ;	      dx - width
    261				     ;	      bx - length
    262				     ;	      ah - color
    263				     ; Exit: None
    264				     ; Destr: AX, CX, DI, BX, DX, SI, ES
    265				     ;------------------------------------------------
    266
    267	01D3			     DrawFrame	 proc
    268
    269	01D3  53				 push bx
    270	01D4  BB B800				 mov bx, 0b800h
    271	01D7  8E C3					 mov es, bx
    272	01D9  5B				 pop bx
    273
    274	01DA  83 EA 02				 sub dx, 2d		     ; AMOUNT OF FRAME'S BODY LINES
    275	01DD  83 EB 02				 sub bx, 2d		     ; AMOUNT OF LINE'S	BODY SYMBOLS
    276
    277	01E0  8B CB				 mov cx, bx		     ; CX = BX
    278	01E2  E8 0027				 call DrawLine		     ; PRINT LINE WITH (BX + 2)	LENGTH
    279
    280	01E5  81 C7 009C			 add di, 156d
    281	01E9  2B FB				 sub di, bx
    282	01EB  2B FB				 sub di, bx		     ; JUMP TO THE NEXT	LINE
    283
    284	01ED  8B CA				 mov cx, dx		     ; PRINTING	FRAME'S	BODY WITH (DX -	2) WIDTH
    285
Turbo Assembler	 Version 4.1	    02/14/24 20:21:54	    Page 6
frame.asm



    286	01EF  51		     body:	 push cx		     ; SAVING BODY WIDTH COUNTER
    287
    288	01F0  8B CB				 mov cx, bx
    289	01F2  E8 0017				 call DrawLine		     ; PRINT LINE WITH (BX + 2)	LENGTH
    290
    291	01F5  59				 pop cx			     ; GETTING BODY WIDTH COUNTER
    292	01F6  83 EE 03				 sub si, 3d		     ; NEXT LINE WILL HAVE SAME	SYMBOLS, AS PREVIOUS
    293
    294	01F9  81 C7 009C			 add di, 156d
    295	01FD  2B FB				 sub di, bx
    296	01FF  2B FB				 sub di, bx		     ; JUMP TO THE NEXT	LINE
    297	0201  E2 EC				 loop body
    298
    299	0203  83 C6 03				 add si, 3d		     ; GETTING NEW SYMBOLS FOR NEXT LINE
    300
    301	0206  8B CB				 mov cx, bx
    302	0208  E8 0001				 call DrawLine		     ; PRINT LINE WITH (BX + 2)	LENGTH
    303
    304	020B  C3					     ret
    305	020C						     endp
    306
    307
    308				     ;------------------------------------------------
    309				     ; Draw line
    310				     ;
    311				     ; Entry: di - first byte position
    312				     ;	      si - char	string adress
    313				     ;	      cx - line	length - 2
    314				     ; Exit: None
    315				     ; Destr: AX, CX, DI
    316				     ;------------------------------------------------
    317
    318	020C			     DrawLine	 proc
    319	020C  AC				 lodsb			 ; GET FIRST STRING SYMBOL
    320	020D  AB				 stosw			 ; PLACE LINE'S	START
    321
    322	020E  AC				 lodsb			 ; GET SECOND STRING SYMBOL
    323	020F  F3> AB				 rep stosw		 ; PLACE LINE'S	BODY
    324
    325	0211  AC				 lodsb			 ; GET LAST STRING SYMBOL
    326	0212  AB				 stosw			 ; PLACE LINE'S	ENDING
    327
    328	0213  C3					     ret
    329	0214						     endp
    330
    331
    332	0214  C9 CD BB BA 00 BA	C8+  Style  db 201d, 205d, 187d, 186d, 0000d, 186d, 200d, 205d,	188d, \
    333	      CD BC 2F 2D 5C 49	20+	       '/',   '-',  '\',  'I',	 ' ',  'I',  '\',  '-',	 '/', \
    334	      49 5C 2D 2F 4C 4F	4C+	       'L',   'O',  'L',  'O',	 ' ',  'O',  'L',  'O',	 'L'
    335	      4F 20 4F 4C 4F 4C
    336
    337				     end start
Turbo Assembler	 Version 4.1	    02/14/24 20:21:54	    Page 7
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/14/24"
??FILENAME			  Text	 "frame	  "
??TIME				  Text	 "20:21:54"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 FRAME
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ARGV				  Byte	 DGROUP:0082
BODY				  Near	 DGROUP:01EF
CENTERFRAME			  Near	 DGROUP:01B3
DECLOOP				  Near	 DGROUP:018A
DECLOOPCHECK			  Near	 DGROUP:0194
DECLOOPEXIT			  Near	 DGROUP:01A0
DEFAULTSTYLE			  Near	 DGROUP:0172
DRAWFRAME			  Near	 DGROUP:01D3
DRAWLINE			  Near	 DGROUP:020C
EXITHEXLOOP			  Near	 DGROUP:015D
GETCONSOLEPARAMS		  Near	 DGROUP:0111
GETDEC				  Near	 DGROUP:0182
GETHEX				  Near	 DGROUP:012D
GETSTYLE			  Near	 DGROUP:0161
HEXALPHA			  Near	 DGROUP:0143
HEXDIGIT			  Near	 DGROUP:0134
HEXLOOP				  Near	 DGROUP:0151
LINE_LEN			  Number 0050
SKIPSPACES			  Near	 DGROUP:01A4
START				  Near	 DGROUP:0100
STYLE				  Byte	 DGROUP:0214

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  022F Word	  Public  CODE
